<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>A modern CSS framework on cu.css</title>
    <link>http://example.org/</link>
    <description>Recent content in A modern CSS framework on cu.css</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <lastBuildDate>Thu, 27 Jul 2023 17:16:41 +0100</lastBuildDate><atom:link href="http://example.org/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Button</title>
      <link>http://example.org/blocks/button/</link>
      <pubDate>Thu, 27 Jul 2023 17:16:31 +0100</pubDate>
      
      <guid>http://example.org/blocks/button/</guid>
      <description>Use the .button class to style links as buttons.
A link as a button A link as a button A disabled link as a button
&amp;lt;a class=&amp;#34;button&amp;#34; href=&amp;#34;#&amp;#34;&amp;gt;A link styled as a button&amp;lt;/a&amp;gt; &amp;lt;a class=&amp;#34;button&amp;#34; data-variant=&amp;#34;outline&amp;#34; href=&amp;#34;#&amp;#34;&amp;gt;A link as a button&amp;lt;/a&amp;gt; &amp;lt;a class=&amp;#34;button&amp;#34; role=&amp;#34;link&amp;#34; aria-disabled=&amp;#34;true&amp;#34;&amp;gt;A disabled link as a button&amp;lt;/a&amp;gt; Use the w-full width utility class to make a button styled link fill the full width of it’s container.
Link styled as a full-width button &amp;lt;a class=&amp;#34;button w-full&amp;#34; href=&amp;#34;#&amp;#34;&amp;gt;Link styled as a full-width button&amp;lt;/a&amp;gt; </description>
    </item>
    
    <item>
      <title>Wrapper</title>
      <link>http://example.org/utilities/wrapper/</link>
      <pubDate>Wed, 12 Jul 2023 12:59:06 +0100</pubDate>
      
      <guid>http://example.org/utilities/wrapper/</guid>
      <description>Sets a max width, adds a consistent gutter and horizontally centers content.
Margin Padding Content Padding Margin Wrapper with horizontal padding visualised in purple and margin in green /* WRAPPER @link: https://piccalil.li/quick-tip/use-css-clamp-to-create-a-more-flexible-wrapper-utility/ */ .wrapper { max-width: var(--wrapper-max-width, 90rem); margin-left: auto; margin-right: auto; padding-left: var(--gutter); padding-right: var(--gutter); position: relative; } </description>
    </item>
    
    <item>
      <title>Grid</title>
      <link>http://example.org/compositions/grid/</link>
      <pubDate>Tue, 11 Jul 2023 16:42:51 +0100</pubDate>
      
      <guid>http://example.org/compositions/grid/</guid>
      <description>Grid comes in three flavours: Two-column, Three-column and Masonry layout.
Two-column layout The two-column layout positions grid items side-by-side when space permits, so that items proportionately share the available space.
Use the layout by adding data-layout=&amp;quot;50-50&amp;quot; to any element with the .grid class applied.
Item 1 Item 2 Item 3 Item 4 Two column when space permits /* Two column when space permits */ .grid[data-layout=&amp;#39;50-50&amp;#39;] { --grid-placement: auto-fit; --grid-min-item-size: clamp(16rem, 50vw, 26rem); } Three-column layout The three-column layout positions grid items in three columns when space permits, so that items proportionately share the available space.</description>
    </item>
    
    <item>
      <title>Installation</title>
      <link>http://example.org/getting-started/installation/</link>
      <pubDate>Tue, 11 Jul 2023 16:42:27 +0100</pubDate>
      
      <guid>http://example.org/getting-started/installation/</guid>
      <description>There are currently two different ways to install cu.css in your project, depending on whether you prefer to work with CSS or SASS.
Installing CSS If you plan to work with CSS:
Download the full project from Github, then: Copy main.min.css from the public folder into your project. Copy the fonts directory into your project. The final step is to create a link to the main.min.css file inside the &amp;lt;head&amp;gt; of your pages:</description>
    </item>
    
    <item>
      <title>Typography</title>
      <link>http://example.org/global-styles/typography/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/global-styles/typography/</guid>
      <description>All typography is fluid responsive, set using Utopia’s Fluid Type Calculator, which makes use of the CSS Clamp function. Choose your min and max font size, then select a type scale and Utopia will generate the code.
All six heading level elements are available to use.
h1 heading h2 heading h3 heading h4 heading h5 heading h6 heading There are also various HTML elements you can use to format inline text in a bunch of different ways:</description>
    </item>
    
    <item>
      <title>Callout</title>
      <link>http://example.org/blocks/callout/</link>
      <pubDate>Thu, 27 Jul 2023 17:16:24 +0100</pubDate>
      
      <guid>http://example.org/blocks/callout/</guid>
      <description>Use .callout to draw attention to content in a visually distinct manner.
Callouts are useful Use them to visually highlight important content. Grid Masonry layout shows a callout in action.
&amp;lt;aside class=&amp;#34;callout&amp;#34;&amp;gt; &amp;lt;strong&amp;gt;Callouts are useful&amp;lt;/strong&amp;gt; &amp;lt;p&amp;gt;Use them to visually highlight important content. &amp;lt;a href=&amp;#34;/compositions/#masonry-layout&amp;#34;&amp;gt;Grid Masonry layout&amp;lt;/a&amp;gt; shows a callout in action.&amp;lt;/p&amp;gt; &amp;lt;/aside&amp;gt; Apply data-variant=&amp;quot;brand&amp;quot; to style a callout using the brand color.
Callouts are useful Use them to visually highlight important content.</description>
    </item>
    
    <item>
      <title>Region</title>
      <link>http://example.org/utilities/region/</link>
      <pubDate>Wed, 12 Jul 2023 12:58:48 +0100</pubDate>
      
      <guid>http://example.org/utilities/region/</guid>
      <description>.region adds consistent vertical padding to an element to create regions of content with sufficient spacing.
By default, .region uses --space-l-xl from the space scale, however the amount of space can also be configured by setting --region-space inline or within any new class you decide to create and use alongside .region.
Padding Content Padding A region of content with vertical padding visualised in purple /* REGION Add consistent vertical padding to create regions of content Can either be configured by setting --region-space or use a default from the space scale @link: https://codepen.</description>
    </item>
    
    <item>
      <title>Cluster</title>
      <link>http://example.org/compositions/cluster/</link>
      <pubDate>Tue, 11 Jul 2023 16:42:27 +0100</pubDate>
      
      <guid>http://example.org/compositions/cluster/</guid>
      <description>Cluster creates flex items which cluster inline, until space no longer permits. At this point, items begin to wrap and display in block. The width of an item is determined by its content.
This layout is handy for grouping elements like navigation links, breadcrumbs, tags, etc. Use it by adding the .cluster class to an element with nested children.
Item 1 Item 2 Item 3 Item 4 Item 5 Item 6 Cluster will cluster items inline while space permits .</description>
    </item>
    
    <item>
      <title>Working with CSS</title>
      <link>http://example.org/getting-started/working-with-css/</link>
      <pubDate>Tue, 11 Jul 2023 16:42:27 +0100</pubDate>
      
      <guid>http://example.org/getting-started/working-with-css/</guid>
      <description>If you plan to customise or build upon cu.css to suit your project, then a good place to start is by unminifying the CSS with a CSS Formatter, to make it easier to work with.
Keep in mind, if you change the file name of your CSS, you will also need to update the link in the &amp;lt;head&amp;gt; of your pages.</description>
    </item>
    
    <item>
      <title>Lists</title>
      <link>http://example.org/global-styles/list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/global-styles/list/</guid>
      <description>Create unordered lists using the ul element:
Unordered list item Unordered list item &amp;lt;ul&amp;gt; &amp;lt;li&amp;gt;Unordered list item&amp;lt;/li&amp;gt; &amp;lt;li&amp;gt;Unordered list item&amp;lt;/li&amp;gt; &amp;lt;/ul&amp;gt; Create ordered lists using the ol element:
Ordered list item Ordered list item &amp;lt;ol&amp;gt; &amp;lt;li&amp;gt;Unordered list item&amp;lt;/li&amp;gt; &amp;lt;li&amp;gt;Unordered list item&amp;lt;/li&amp;gt; &amp;lt;/ol&amp;gt; </description>
    </item>
    
    <item>
      <title>Card</title>
      <link>http://example.org/blocks/card/</link>
      <pubDate>Thu, 27 Jul 2023 17:16:37 +0100</pubDate>
      
      <guid>http://example.org/blocks/card/</guid>
      <description>.card can be used to distinguish content relating to a specific topic. Optionally include an image, heading, paragraph content, links and buttons.
To make the whole card clickable, add an &amp;lt;a&amp;gt; element inside a heading element. Both links and buttons found elsewhere in the card will remain clickable.
Use the Grid compostition to display multiple cards in columns, as shown below.
Millennium Falcon Won by Han Solo from Lando Calrissian in a game of sabacc.</description>
    </item>
    
    <item>
      <title>Flow</title>
      <link>http://example.org/utilities/flow/</link>
      <pubDate>Wed, 12 Jul 2023 12:58:27 +0100</pubDate>
      
      <guid>http://example.org/utilities/flow/</guid>
      <description>Applies a margin to sibling elements based on a --flow-space custom property.
Content Margin (default) Content Margin (set inline using --flow-space) Content Flow utility with margin visualised in green /* FLOW @link: See The Stack in Every Layout https://every-layout.dev/layouts/stack/ @link: https://piccalil.li/tutorial/improve-the-readability-of-the-content-on-your-website#heading-the-flow-utility @link: https://piccalil.li/quick-tip/flow-utility/ */ .flow &amp;gt; * + * { margin-top: var(--flow-space, 1em); } </description>
    </item>
    
    <item>
      <title>Repel</title>
      <link>http://example.org/compositions/repel/</link>
      <pubDate>Tue, 11 Jul 2023 16:42:27 +0100</pubDate>
      
      <guid>http://example.org/compositions/repel/</guid>
      <description>Repel adds as much inline space as possibe between two grid items, so that 100% of the inline space has been filled. When space doesn’t permit, items will wrap, appearing as block elements.
Add the .repel class to site headers, site footers or anywhere you want to push two items away from each other.
Use data-nowrap to prevent items from wrapping when space no longer permits.
Item 1 Item 2 Repel quite literally repels two items from one another .</description>
    </item>
    
    <item>
      <title>Working with SASS</title>
      <link>http://example.org/getting-started/working-with-sass/</link>
      <pubDate>Tue, 11 Jul 2023 16:42:27 +0100</pubDate>
      
      <guid>http://example.org/getting-started/working-with-sass/</guid>
      <description>Some text</description>
    </item>
    
    <item>
      <title>Blockquotes</title>
      <link>http://example.org/global-styles/blockquote/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/global-styles/blockquote/</guid>
      <description>Use the &amp;lt;blockquote&amp;gt; element to quote books you’ve read, things you’ve heard from your pals or even ideas you’ve had yourself.
All large-scale human cooperation is ultimately based on our belief in imagined orders.
– Yuval Noah Harari
&amp;lt;blockquote&amp;gt; &amp;lt;p&amp;gt;All large-scale human cooperation is ultimately based on our belief in imagined orders.&amp;lt;/p&amp;gt; &amp;lt;p&amp;gt;- &amp;lt;cite&amp;gt;Yuval Noah Harari&amp;lt;/cite&amp;gt;&amp;lt;/p&amp;gt; &amp;lt;/blockquote&amp;gt; </description>
    </item>
    
    <item>
      <title>Hero</title>
      <link>http://example.org/blocks/hero/</link>
      <pubDate>Thu, 27 Jul 2023 17:16:41 +0100</pubDate>
      
      <guid>http://example.org/blocks/hero/</guid>
      <description>Use .hero, combined with region and flow to create a distictive headline section for pages. For the sake of clarity, pipes are used to group classes, as seen below.
A modern CSS framework cu.css is built using Cube CSS and Utopia fluid responsive design.
&amp;lt;div class=&amp;#34;hero | region | flow&amp;#34;&amp;gt; &amp;lt;h1&amp;gt;Some page title&amp;lt;/h1&amp;gt; &amp;lt;p&amp;gt;Some page description&amp;lt;/p&amp;gt; &amp;lt;/div&amp;gt; </description>
    </item>
    
    <item>
      <title>Visually Hidden</title>
      <link>http://example.org/utilities/visually-hidden/</link>
      <pubDate>Wed, 12 Jul 2023 12:59:32 +0100</pubDate>
      
      <guid>http://example.org/utilities/visually-hidden/</guid>
      <description>Use the .visually-hidden utility to visually hide an element while ensuring it’s still accessible to assistive technologies, screen readers, and so on.
/* VISUALLY HIDDEN @link: https://piccalil.li/quick-tip/visually-hidden/ */ .visually-hidden { border: 0; clip: rect(0 0 0 0); height: auto; margin: 0; overflow: hidden; padding: 0; position: absolute; width: 1px; white-space: nowrap; } </description>
    </item>
    
    <item>
      <title>Code blocks</title>
      <link>http://example.org/global-styles/codeblock/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/global-styles/codeblock/</guid>
      <description>Create code blocks, like the one below, using the &amp;lt;pre&amp;gt; element with a nested &amp;lt;code&amp;gt; element inside.
&amp;lt;pre&amp;gt; &amp;lt;code&amp;gt; body { color: var(--color-dark); background: var(--color-light); font-size: var(--step-0); font-family: var(--font-base); letter-spacing: var(--tracking); } &amp;lt;/code&amp;gt; &amp;lt;/pre&amp;gt; </description>
    </item>
    
    <item>
      <title>Text</title>
      <link>http://example.org/utilities/text/</link>
      <pubDate>Thu, 27 Jul 2023 16:50:03 +0100</pubDate>
      
      <guid>http://example.org/utilities/text/</guid>
      <description>The .text-center utility class can be used to center the horizontal alignment of inline-level content inside a block element or table-cell box.
.text-center { text-align: center; } </description>
    </item>
    
    <item>
      <title>Forms</title>
      <link>http://example.org/global-styles/form/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/global-styles/form/</guid>
      <description>Use the &amp;lt;form&amp;gt; element to contain any interative elements, used to submit information and collect data.
Email Address Password Submit &amp;lt;form&amp;gt; &amp;lt;label for=&amp;#34;email-address&amp;#34;&amp;gt;Email Address&amp;lt;/label&amp;gt; &amp;lt;input name=&amp;#34;email-address&amp;#34; id=&amp;#34;email-address&amp;#34; type=&amp;#34;email&amp;#34; autocomplete=&amp;#34;username&amp;#34; required&amp;gt; &amp;lt;label for=&amp;#34;password&amp;#34;&amp;gt;Password&amp;lt;/label&amp;gt; &amp;lt;input type=&amp;#34;password&amp;#34; name=&amp;#34;password&amp;#34; id=&amp;#34;password&amp;#34; autocomplete=&amp;#34;current-password&amp;#34;&amp;gt; &amp;lt;button type=&amp;#34;submit&amp;#34; value=&amp;#34;Submit&amp;#34;&amp;gt;Submit&amp;lt;/button&amp;gt; &amp;lt;/form&amp;gt; Optionally, you can also:
Use &amp;lt;fieldset&amp;gt; to group elements within the form. Use &amp;lt;legend&amp;gt; to caption the form contents. Add the w-full width utility class to any input, textarea or button to make it fill the width of the form.</description>
    </item>
    
    <item>
      <title>Width</title>
      <link>http://example.org/utilities/width/</link>
      <pubDate>Thu, 27 Jul 2023 16:49:54 +0100</pubDate>
      
      <guid>http://example.org/utilities/width/</guid>
      <description>The .w-full utility class can be used to make an element fill the full width of its parent container. particularly useful for buttons and form elements.
.w-full { width: 100%; } </description>
    </item>
    
    <item>
      <title>Accordions</title>
      <link>http://example.org/global-styles/accordion/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/global-styles/accordion/</guid>
      <description>Use the &amp;lt;details&amp;gt; and &amp;lt;summary&amp;gt; elements to create accordions.
Do you ship internationally? Unfortunately, we only ship domestically at this time, however we hope to ship internationally in the not too distant future.
&amp;lt;details&amp;gt; &amp;lt;summary&amp;gt;Do you ship internationally?&amp;lt;/summary&amp;gt; &amp;lt;p&amp;gt;Unfortunately, we only ship domestically at this time, however we hope to ship internationally in the not too distant future.&amp;lt;/p&amp;gt; &amp;lt;/details&amp;gt; Add data-variant=&amp;quot;fancy&amp;quot; to hide default ::marker and enhance accordions with fancy “more” and “less” arrows, positioned on the far right of the &amp;lt;summary&amp;gt; text.</description>
    </item>
    
    <item>
      <title>Tables</title>
      <link>http://example.org/global-styles/table/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/global-styles/table/</guid>
      <description>Tables are handy for visualising and making connections between different types of structured data. Use all the usual elements: &amp;lt;table&amp;gt;, &amp;lt;thead&amp;gt;, &amp;lt;tr&amp;gt;, &amp;lt;th&amp;gt;, &amp;lt;tbody&amp;gt;, &amp;lt;td&amp;gt; and &amp;lt;caption&amp;gt;.
Star Wars characters, their home worlds and preferred weapon. Character Homeworld Weapon Luke Tatooine Lightsaber Han Corellia Blaster Leia Alderaan Blaster Obi-Wan Stewjon Lightsaber Yoda Dagobah Lightsaber &amp;lt;table&amp;gt; &amp;lt;caption&amp;gt; &amp;lt;small&amp;gt;Star Wars characters and their home worlds&amp;lt;/small&amp;gt; &amp;lt;/caption&amp;gt; &amp;lt;thead&amp;gt; &amp;lt;tr&amp;gt; &amp;lt;th&amp;gt;Character&amp;lt;/th&amp;gt; &amp;lt;th&amp;gt;Homeworld&amp;lt;/th&amp;gt; &amp;lt;th&amp;gt;Weapon&amp;lt;/th&amp;gt; &amp;lt;/tr&amp;gt; &amp;lt;/thead&amp;gt; &amp;lt;tbody&amp;gt; &amp;lt;tr&amp;gt; &amp;lt;td&amp;gt;Luke&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt;Tatooine&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt;Lightsaber&amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt; &amp;lt;tr&amp;gt; &amp;lt;td&amp;gt;Han&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt;Corellia&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt;Blaster&amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt; &amp;lt;tr&amp;gt; &amp;lt;td&amp;gt;Leia&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt;Alderaan&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt;Blaster&amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt; &amp;lt;tr&amp;gt; &amp;lt;td&amp;gt;Obi-Wan&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt;Stewjon&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt;Lightsaber&amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt; &amp;lt;tr&amp;gt; &amp;lt;td&amp;gt;Yoda&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt;Dagobah&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt;Lightsaber&amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt; &amp;lt;/tbody&amp;gt; &amp;lt;/table&amp;gt; </description>
    </item>
    
    <item>
      <title>Buttons</title>
      <link>http://example.org/global-styles/button/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/global-styles/button/</guid>
      <description>Use the &amp;lt;button&amp;gt; element to create interactive buttons. To style a button with the outline style, use the data attribute data-variant=&amp;quot;outline&amp;quot;. For more on this approach see Exception’s in Cube CSS.
Submit Clear Disabled &amp;lt;button type=&amp;#34;submit&amp;#34; value=&amp;#34;Submit&amp;#34;&amp;gt;Submit&amp;lt;/button&amp;gt; &amp;lt;button type=&amp;#34;submit&amp;#34; data-variant=&amp;#34;outline&amp;#34; value=&amp;#34;Clear&amp;#34;&amp;gt;Clear&amp;lt;/button&amp;gt; &amp;lt;button type=&amp;#34;submit&amp;#34; disabled=&amp;#34;&amp;#34;&amp;gt;Disabled&amp;lt;/button&amp;gt; Inputs with type=&amp;quot;submit&amp;quot;, type=&amp;quot;reset&amp;quot; or type=&amp;quot;button&amp;quot; applied also inherit button styles. Therefore, you can apply the variant style to these elements too.
&amp;lt;input type=&amp;#34;submit&amp;#34; /&amp;gt; &amp;lt;input type=&amp;#34;submit&amp;#34; data-variant=&amp;#34;outline&amp;#34; /&amp;gt; Just like with form elements, you can also use the w-full width utility class to make a &amp;lt;button&amp;gt; fill the full width of its parent container.</description>
    </item>
    
    <item>
      <title>Links</title>
      <link>http://example.org/global-styles/link/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/global-styles/link/</guid>
      <description>Use the anchor element, a.k.a &amp;lt;a&amp;gt; tag to link to different pages
&amp;lt;a href=&amp;#34;/about&amp;#34;&amp;gt;About&amp;lt;/a&amp;gt; Links look like this, by default.
But you can also use use the data attribute data-variant=&amp;quot;naked&amp;quot; to make them look like text.
&amp;lt;a href=&amp;#34;/&amp;#34; data-variant=&amp;#34;naked&amp;#34;&amp;gt;A naked link&amp;lt;/a&amp;gt; An example of data-variant=&amp;quot;naked&amp;quot; being used on links can be seen in the navigation found at the top of each page on this website.</description>
    </item>
    
    <item>
      <title>Images</title>
      <link>http://example.org/global-styles/image/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/global-styles/image/</guid>
      <description>Use the &amp;lt;img&amp;gt; element in the usual way. Images have max-width: 100% applied, ensuring they fill the entire width of parent element, as we’ve come to expect.
&amp;lt;img src=&amp;#34;/img/brian-mcgowan-HiftPDiIVTY-unsplash.jpg&amp;#34; alt=&amp;#34;&amp;#34; /&amp;gt; To give your image a caption, place your &amp;lt;img&amp;gt; inside a &amp;lt;figure&amp;gt; and use &amp;lt;figcaption&amp;gt; for the caption.
Photo by Brian McGowan on Unsplash. &amp;lt;figure&amp;gt; &amp;lt;img src=&amp;#34;/img/brian-mcgowan-HiftPDiIVTY-unsplash.jpg&amp;#34; alt=&amp;#34;&amp;#34; /&amp;gt; &amp;lt;figcaption&amp;gt; Photo by &amp;lt;a href=&amp;#34;https://unsplash.com/@sushioutlaw&amp;#34;&amp;gt;Brian McGowan&amp;lt;/a&amp;gt; on Unsplash. &amp;lt;/figcaption&amp;gt; &amp;lt;/figure&amp;gt; </description>
    </item>
    
    <item>
      <title>Horizontal rule</title>
      <link>http://example.org/global-styles/hr/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/global-styles/hr/</guid>
      <description>The &amp;lt;hr&amp;gt; element can be used to create a thematic break between paragraph-level elements: for example, a change of scene in a story, or a shift of topic within a section.
&amp;lt;hr&amp;gt; </description>
    </item>
    
  </channel>
</rss>
