/*
CARD

A block that styles content as a card.
Largely based on:
@link: https://inclusive-components.design/cards/
@link: https://portfolio.set.studio/design-system/component/cards/
*/
.card {
  --img-ratio: 3/2;
  display: flex;
  flex-direction: column;
  position: relative;
  border: solid .1rem;
  border-radius: var(--border-radius);
}

/* Ensure consistent heading size regardless of heading level */
.card :is(h2, h3, h4) {
  font-size: var(--step-1);
}

/* Ensure consistent text size for all non-heading elements */
.card > :not(h2, h3, h4) {
  font-size: var(--step--1);
}

/* 
  Use Heydon’s pseudo-content trick to make the whole card clickable
  @link: https://inclusive-components.design/cards/#thepseudocontenttrick
  See also Andy’s Breakout button 
  @link: https://piccalil.li/tutorial/create-a-semantic-break-out-button-to-make-an-entire-element-clickable/
*/
.card :is(h2, h3, h4) > a::after {
  content: '';
  position: absolute;
  left: 0;
  top: 0;
  right: 0;
  bottom: 0;
}

/* Raise all other links above the pseudo-content, so they remain clickable */
.card p,
.card button,
.card .button {
  position: relative;
  z-index: 1;
}

/* Apply a basic focus style to the link so that users of older browsers that do not support :focus-within will still see a fallback focus style */
.card a:focus {
  text-decoration: underline;
}


/* Use :focus-within to match the :hover style */
.card:focus-within {
  box-shadow: 0 0 0 .1rem;
}

/* Remove the unnecessary basic :focus style only where :focus-within is supported */
.card:focus-within a:focus {
  text-decoration: none;
} 

/* Create consistent image behaviour and ratio */
.card > img {
  aspect-ratio: var(--img-ratio);
  object-fit: cover;
  width: 100%;
}

/* Force the textual elements to take up all the available space and prevents line length for cards on large screens not supporting grid from becoming too long */
.card > div {
  --flow-space: 1rem;
  display: flex;
  flex-direction: column;
  flex-grow: 1;
  padding: 1rem;
  max-width: 60ch;
}

/* Push the last textual element to the bottom of the card, regardless of its height. */
.card > div :last-child {
  margin-top: auto;
}

/* Add a bottom margin to the second last element, to ensure a minimum level of separation */
.card > div :nth-last-child(2) {
  margin-bottom: var(--space-xs-s);
}

/* Optionally flip the card design
 @link: https://cube.fyi/exception.html 
*/
.card[data-state='reversed'] {
  display: flex;
  flex-direction: column-reverse;
}